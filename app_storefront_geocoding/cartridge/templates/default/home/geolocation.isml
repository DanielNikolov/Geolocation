<iscontent type="text/html" charset="UTF-8" compact="true"/>
<isdecorate template="content/home/pt_storefront">

<div id="description">
	<button type="button" class="btn btn-info toggler" data-toggle="collapse" data-target="#task-description">
		<isprint value="${Resource.msg('geolocation.title.taskdescription', 'forms', null)}" />
	</button>
	<div id="task-description" class="collapse in container">
		<b>Task Description:</b><br/>
		
		Create a new cartridge app_geocoding with a new controller Geocoding.js
		When the user accesses the Geocoding-Show URL a form should rendered with an input field where the user can specify a physical address.
		 
		When the user submits the data (with AJAX) using the Google Geocoding API and DW Script with the Service Framework<br/>
		<a href="https://developers.google.com/maps/documentation/geocoding/start">Geocoding Documentation</a>  retrieve the GPS coordinates (lat, long) <br/>
		corresponding to the entered address and display them on the same page, bellow the form.
		The requests made to Google Geocoding API should be cached in a custom object.<br/>
		So for each request made by the user from his browser first check if that data is already available in the custom object cache<br/>
		and if it is retrieve it from there, else make the request to Google Geocoding API and cache it in the custom object.<br/>
		<br/> 
		Bonus points for any frontend usability: Bootstrap or any other CSS framework out there that is used to make the HTML form and other elements used look nice
	</div>
</div>
<div id="data-container">
	<button type="button" class="btn btn-info toggler" data-toggle="collapse" data-target="#task-data">
		<isprint value="${Resource.msg('geolocation.title.taskdata', 'forms', null)}" />
	</button>
	<div id="task-data" class="collapse in container">
		<input id="search-data" type="text" placeholder="Enter address">
		<button id="search" type="button" class="btn btn-info">
			<isprint value="${Resource.msg('geolocation.title.search', 'forms', null)}" />
		</button>
		<span class="error" style="display: none;">
			<isprint value="${Resource.msg('geolocation.error.invaliddata', 'forms', null)}" />
		</span>
	</div>
</div>

<div id="results-container">
	<button type="button" class="btn btn-info toggler" data-toggle="collapse" data-target="#results-data">
		<isprint value="${Resource.msg('geolocation.title.searchresult', 'forms', null)}" />
	</button>
	<div id="results-data" class="collapse in container" class="container">
		<span><isprint value="${Resource.msg('geolocation.nodata', 'forms', null)}" /></span> 
	</div>
</div>	
</isdecorate>